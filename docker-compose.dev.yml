version: '3.9'

networks:
  www-net-dev:
    driver: bridge

services:
  mongo:
    hostname: mongo
    container_name: mongodb-dev
    image: mongo:latest
    restart: always
    networks:
      - www-net-dev
    volumes:
      - ./docker-volumes/mongodb:/data/db
    ports:
      - 27017:27017
  postgresql:
    hostname: postgresql
    container_name: postgres-dev
    image: postgres:15.2
    restart: always
    networks:
      - www-net-dev
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql/data
      - ./scripts/docker-postgresql-multiple-databases/db_init.sh:/docker-entrypoint-initdb.d/db_init.sh
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_MULTIPLE_DATABASES=order,docs,payment,shipping
    ports:
      - 5432:5432
  pgadmin:
    hostname: pgamdin
    container_name: pgadmin-dev
    image: dpage/pgadmin4:latest
    networks:
      - www-net-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@domain.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 5050:80
    depends_on:
      - postgresql
  keycloak:
    hostname: keycloak
    container_name: keycloak-dev
    image: quay.io/keycloak/keycloak:21.0.1
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./docker-volumes/keycloak/realm/data:/opt/keycloak/data/import
    ports:
      - 8080:8080
      - 8443:8443
    command: start-dev
  nginx:
    hostname: nginx
    container_name: nginx-dev
    image: nginx:1.23.3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/data/static
    networks:
      - www-net-dev
    ports:
      - 3000:80
      - 80:80
    restart: always
    depends_on:
      - account-service
      - docs-service
      - order-service
      - payment-service
      - shipping-service
      - catalog-service
      - chat-service
      - notification-service
  frontend:
    hostname: frontend
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    networks:
      - www-net-dev
    volumes:
      - ./frontend:/home/app
    ports:
      - 8000:8000
  account-service:
    hostname: account-service
    container_name: account-service-dev
    build:
      context: ./services/account
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/account:/home/app
    ports:
      - 3001:3001
  docs-service:
    hostname: docs-service
    container_name: docs-service-dev
    build:
      context: ./services/docs
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/docs:/home/app
    ports:
      - 3005:3005
    depends_on:
      - postgresql
  order-service:
    hostname: order-service
    container_name: order-service-dev
    build:
      context: ./services/order
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/order:/home/app
    ports:
      - 3003:3003
    depends_on:
      - postgresql
  payment-service:
    hostname: payment-service
    container_name: payment-service-dev
    build:
      context: ./services/payment
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/payment:/home/app
    ports:
      - 3004:3004
    depends_on:
      - postgresql
  shipping-service:
    hostname: shipping-service
    container_name: shipping-service-dev
    build:
      context: ./services/shipping
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/shipping:/home/app
    ports:
      - 3008:3008
    depends_on:
      - postgresql
  catalog-service:
    hostname: catalog-service
    container_name: catalog-service-dev
    build:
      context: ./services/catalog
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/catalog:/home/app
    ports:
      - 3002:3002
    depends_on:
      - mongo
  chat-service:
    hostname: chat-service
    container_name: chat-service-dev
    build:
      context: ./services/chat
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/chat:/home/app
    ports:
      - 3007:3007
    depends_on:
      - mongo
  notification-service:
    hostname: notification-service-dev
    container_name: notification-service-dev
    build:
      context: ./services/notification
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    networks:
      - www-net-dev
    volumes:
      - ./services/notification:/home/app
    ports:
      - 3006:3006
    depends_on:
      - mongo
